//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class CircularScrollView_UICircularScrollViewWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(CircularScrollView.UICircularScrollView), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("Init", Init);
		L.RegFunction("UpdateList", UpdateList);
		L.RegFunction("UpdateCell", UpdateCell);
		L.RegFunction("ShowList", ShowList);
		L.RegFunction("UpdateSize", UpdateSize);
		L.RegFunction("DisposeAll", DisposeAll);
		L.RegFunction("OnClickCell", OnClickCell);
		L.RegFunction("OnClickExpand", OnClickExpand);
		L.RegFunction("SetToPageIndex", SetToPageIndex);
		L.RegFunction("OnBeginDrag", OnBeginDrag);
		L.RegFunction("OnDrag", OnDrag);
		L.RegFunction("OnEndDrag", OnEndDrag);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("m_PointingFirstArrow", get_m_PointingFirstArrow, set_m_PointingFirstArrow);
		L.RegVar("m_PointingEndArrow", get_m_PointingEndArrow, set_m_PointingEndArrow);
		L.RegVar("m_Direction", get_m_Direction, set_m_Direction);
		L.RegVar("m_IsShowArrow", get_m_IsShowArrow, set_m_IsShowArrow);
		L.RegVar("m_Row", get_m_Row, set_m_Row);
		L.RegVar("m_Spacing", get_m_Spacing, set_m_Spacing);
		L.RegVar("m_CellGameObject", get_m_CellGameObject, set_m_CellGameObject);
		L.RegVar("m_CellInfos", get_m_CellInfos, set_m_CellInfos);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
				System.Action<UnityEngine.GameObject,int> arg0 = (System.Action<UnityEngine.GameObject,int>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject,int>>(L, 2);
				obj.Init(arg0);
				return 0;
			}
			else if (count == 3)
			{
				CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
				System.Action<UnityEngine.GameObject,int> arg0 = (System.Action<UnityEngine.GameObject,int>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject,int>>(L, 2);
				System.Action<UnityEngine.GameObject,int> arg1 = (System.Action<UnityEngine.GameObject,int>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject,int>>(L, 3);
				obj.Init(arg0, arg1);
				return 0;
			}
			else if (count == 4)
			{
				CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
				System.Action<UnityEngine.GameObject,int> arg0 = (System.Action<UnityEngine.GameObject,int>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject,int>>(L, 2);
				System.Action<UnityEngine.GameObject,int> arg1 = (System.Action<UnityEngine.GameObject,int>)ToLua.CheckDelegate<System.Action<UnityEngine.GameObject,int>>(L, 3);
				System.Action<int,bool,UnityEngine.GameObject> arg2 = (System.Action<int,bool,UnityEngine.GameObject>)ToLua.CheckDelegate<System.Action<int,bool,UnityEngine.GameObject>>(L, 4);
				obj.Init(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: CircularScrollView.UICircularScrollView.Init");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			obj.UpdateList();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateCell(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.UpdateCell(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowList(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<int>(L, 2))
			{
				CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
				int arg0 = (int)LuaDLL.lua_tonumber(L, 2);
				obj.ShowList(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<string>(L, 2))
			{
				CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				obj.ShowList(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: CircularScrollView.UICircularScrollView.ShowList");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UpdateSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			obj.UpdateSize();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DisposeAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			obj.DisposeAll();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClickCell(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.OnClickCell(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClickExpand(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.OnClickExpand(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetToPageIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.SetToPageIndex(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnBeginDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnBeginDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEndDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)ToLua.CheckObject<CircularScrollView.UICircularScrollView>(L, 1);
			UnityEngine.EventSystems.PointerEventData arg0 = (UnityEngine.EventSystems.PointerEventData)ToLua.CheckObject<UnityEngine.EventSystems.PointerEventData>(L, 2);
			obj.OnEndDrag(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_PointingFirstArrow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			UnityEngine.GameObject ret = obj.m_PointingFirstArrow;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_PointingFirstArrow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_PointingEndArrow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			UnityEngine.GameObject ret = obj.m_PointingEndArrow;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_PointingEndArrow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Direction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			CircularScrollView.e_Direction ret = obj.m_Direction;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Direction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_IsShowArrow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			bool ret = obj.m_IsShowArrow;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_IsShowArrow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Row(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			int ret = obj.m_Row;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Row on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_Spacing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			float ret = obj.m_Spacing;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Spacing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_CellGameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			UnityEngine.GameObject ret = obj.m_CellGameObject;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_CellGameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_m_CellInfos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			CircularScrollView.UICircularScrollView.CellInfo[] ret = obj.m_CellInfos;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_CellInfos on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_PointingFirstArrow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_PointingFirstArrow = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_PointingFirstArrow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_PointingEndArrow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_PointingEndArrow = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_PointingEndArrow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Direction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			CircularScrollView.e_Direction arg0 = (CircularScrollView.e_Direction)ToLua.CheckObject(L, 2, typeof(CircularScrollView.e_Direction));
			obj.m_Direction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Direction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_IsShowArrow(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.m_IsShowArrow = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_IsShowArrow on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Row(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.m_Row = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Row on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_Spacing(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.m_Spacing = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_Spacing on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_CellGameObject(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			obj.m_CellGameObject = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_CellGameObject on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_m_CellInfos(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			CircularScrollView.UICircularScrollView obj = (CircularScrollView.UICircularScrollView)o;
			CircularScrollView.UICircularScrollView.CellInfo[] arg0 = ToLua.CheckStructArray<CircularScrollView.UICircularScrollView.CellInfo>(L, 2);
			obj.m_CellInfos = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index m_CellInfos on a nil value");
		}
	}
}

